{"version":3,"file":"static/js/974.87f11000.chunk.js","mappings":"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","sources":["pages/Profile/MyHotels/AddHotel/AddHotel.js","pages/Profile/MyHotels/HotelForm/HotelForm.js"],"sourcesContent":["import useWebsiteTitle from \"../../../../hooks/useWebsiteTitle\";\nimport HotelForm from \"../HotelForm/HotelForm\";\nimport instance from \"../../../../axios\";\n\n\nconst AddHotel = () => {\n\n    useWebsiteTitle(\"Dodawanie hoteli | Noclegi.\")\n\n\n    async function submit(form) {\n        await instance.post('/hotels.json', form);\n    }\n\n    return <>\n        <HotelForm title=\"Dodaj Hotel\" buttonLabel=\"Dodaj.\" buttonLoadingLabel=\"Dodawanie Hotelu\" onSubmit={submit}/>\n    </>;\n};\n\nexport default AddHotel;","import Input from \"../../../../components/forms/Inputs/Input\";\nimport {inputChangeHandler} from \"../../../../components/forms/Inputs/InputHelpers/inputChangeHandler\";\nimport {useContext, useEffect, useState} from \"react\";\nimport LoadingButton from \"../../../../components/UI/LoadingButton/LoadingButton\";\nimport {func, object, string} from \"prop-types\";\nimport themeContext from \"../../../../context/themeContext\";\nimport {\n    checkValidationForTrackedInputs\n} from \"../../../../components/forms/Inputs/InputHelpers/checkValidationForTrackedInputs\";\nimport {useNavigate} from \"react-router-dom\";\nimport useAuth from \"../../../../hooks/useAuth\";\n\nconst propTypes = {\n    title: string.isRequired,\n    buttonLabel: string.isRequired,\n    buttonLoadingLabel: string.isRequired,\n    onSubmit: func.isRequired,\n    hotel: object,\n};\n\nfunction HotelForm(props) {\n    const theme = useContext(themeContext).color;\n\n    const [name, setName] = useState({\n        value: '',\n        error: '',\n        showError: false,\n        rules: ['required', {rule: \"min\", length: 4}]\n    });\n    const [city, setCity] = useState({value: '', error: '', showError: false, rules: ['required']});\n    const [rooms, setRooms] = useState({value: '2', error: '', showError: false, rules: ['required']});\n    const [description, setDescription] = useState({\n        value: '',\n        error: '',\n        showError: false,\n        rules: ['required', {rule: \"min\", length: 10}]\n    });\n    const [status, setStatus] = useState({value: 'Aktywny', error: '', showError: false, rules: ['required']});\n\n    const [image, setImage] = useState({value: null, error: '', showError: false, rules: []});\n\n    const [features, setFeatures] = useState({value: [], error: '', showError: false, rules: []});\n\n    useEffect(() => {\n        const hotel = props.hotel ?? {\n            name: '',\n            city: '',\n            rooms: '',\n            description: '',\n            status: 'Aktywny',\n            features: [],\n        };\n        setName({...name, value: hotel.name ?? '', showError: true, error: '', isValid: true});\n        setCity({...city, value: hotel.city ?? '', showError: true, error: '', isValid: true});\n        setRooms({...rooms, value: hotel.rooms ?? ''});\n        setDescription({...description, value: hotel.description ?? '', showError: true, error: '', isValid: true});\n        setStatus({...status, value: hotel.status ?? ''});\n        setFeatures({...features, value: hotel.features ?? []});\n    }, [props.hotel]);\n\n    const [loading, setLoading] = useState(false);\n    const [addSuccess, setAddSuccess] = useState(false);\n\n    const [isEverythingValid, setIsEverythingValid] = useState(false);\n    const trackValues = [city, description, name]\n    useEffect(() => {\n        setIsEverythingValid(checkValidationForTrackedInputs(trackValues));\n    }, trackValues);\n\n    const navigate = useNavigate();\n    const [auth] = useAuth();\n    const submit = async event => {\n        event.preventDefault();\n        setLoading(true);\n        try {\n            await props.onSubmit({\n                name: name.value,\n                city: city.value,\n                rooms: rooms.value,\n                description: description.value,\n                status: status.value,\n                features: features.value,\n                idUser: auth.userId,\n            });\n            navigate(\"/profil/mojeHotele\", {replace: false});\n        } catch (e) {\n            console.log(e.response);\n            throw new Error(e.response);\n        }\n\n        setLoading(false);\n        setAddSuccess(true);\n        setTimeout(() => setAddSuccess(false), 3000);\n\n    }\n\n    return (\n        <>\n            {addSuccess ? <div className=\"alert alert-success\">\n                <p>Pomyślnie dodano nowy hotel.</p>\n            </div> : null}\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    {props.title}\n                </div>\n                <div className=\"card-body\">\n                    <form onSubmit={submit}>\n\n                        <Input\n                            description=\"Nazwa\"\n                            value={name.value}\n                            onChange={value => inputChangeHandler(value, name, setName)}\n                            type=\"text\"\n                            isValid={name.isValid}\n                            showError={name.showError}\n                            invalidFeedback={name.error}\n                        />\n\n                        <Input\n                            description=\"Miejscowość\"\n                            value={city.value}\n                            onChange={value => inputChangeHandler(value, city, setCity)}\n                            type=\"text\"\n                            isValid={city.isValid}\n                            showError={city.showError}\n                            invalidFeedback={city.error}\n                        />\n\n                        <Input\n                            description=\"Opis\"\n                            value={description.value}\n                            onChange={value => inputChangeHandler(value, description, setDescription)}\n                            type=\"textarea\"\n                            isValid={description.isValid}\n                            showError={description.showError}\n                            invalidFeedback={description.error}\n                        />\n\n                        <Input\n                            description=\"Pokoje\"\n                            value={rooms.value}\n                            onChange={value => inputChangeHandler(value, rooms, setRooms)}\n                            type=\"select\"\n                            option={[\n                                {value: 1, label: 1},\n                                {value: 2, label: 2},\n                                {value: 3, label: 3},\n                                {value: 4, label: 4},\n                            ]}\n                            isValid={rooms.isValid}\n                            showError={rooms.showError}\n                            invalidFeedback={rooms.error}\n                        />\n\n                        <Input onChange={value => setImage({...image, value})} description=\"Zdjęcie\" type=\"file\"/>\n\n                        <Input\n                            description=\"udogodnienia\"\n                            onChange={value => inputChangeHandler(value, features, setFeatures)}\n                            type=\"checkbox\"\n                            value={features.value}\n                            option={[\n                                {value: 'tv', label: 'TV'},\n                                {value: 'wifi', label: 'Wi-Fi'},\n                                {value: 'parking', label: 'Parking'},\n                            ]}\n                            isValid={features.isValid}\n                            showError={features.showError}\n                            invalidFeedback={features.error}\n                        />\n\n                        <Input\n                            type=\"radio\"\n                            value={status.value}\n                            onChange={value => inputChangeHandler(value, status, setStatus)}\n                            description=\"Status\"\n                            name=\"active\"\n                            option={[\n                                {value: \"Aktywny\", label: \"Aktywny\"},\n                                {value: \"Ukryty\", label: \"Ukryty\"}\n                            ]}\n                            isValid={status.isValid}\n                            showError={status.showError}\n                            invalidFeedback={status.error}\n                        />\n\n                        <LoadingButton\n                            loading={loading}\n                            label={props.buttonLabel}\n                            loadingLabel={props.buttonLoadingLabel}\n                            className={`btn-${theme}`}\n                            disabled={!isEverythingValid}\n                        />\n                    </form>\n                </div>\n            </div>\n        </>\n    )\n}\n\nHotelForm.propTypes = propTypes;\n\nexport default HotelForm;"],"names":["form","instance","useWebsiteTitle","title","buttonLabel","buttonLoadingLabel","onSubmit","props","theme","useContext","themeContext","color","useState","value","error","showError","rules","rule","length","name","setName","city","setCity","rooms","setRooms","description","setDescription","status","setStatus","image","setImage","features","setFeatures","useEffect","hotel","isValid","loading","setLoading","addSuccess","setAddSuccess","isEverythingValid","setIsEverythingValid","trackValues","checkValidationForTrackedInputs","navigate","useNavigate","useAuth","auth","submit","event","preventDefault","idUser","userId","replace","console","log","response","Error","setTimeout","className","onChange","inputChangeHandler","type","invalidFeedback","option","label","loadingLabel","disabled"],"sourceRoot":""}