{"version":3,"file":"static/js/123.530b7cda.chunk.js","mappings":"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","sources":["../node_modules/validator/es/lib/isStrongPassword.js","pages/Profile/ProfileDetails/ProfileDetails.js"],"sourcesContent":["import merge from './util/merge';\nimport assertString from './util/assertString';\nvar upperCaseRegex = /^[A-Z]$/;\nvar lowerCaseRegex = /^[a-z]$/;\nvar numberRegex = /^[0-9]$/;\nvar symbolRegex = /^[-#!$@%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/ ]$/;\nvar defaultOptions = {\n  minLength: 8,\n  minLowercase: 1,\n  minUppercase: 1,\n  minNumbers: 1,\n  minSymbols: 1,\n  returnScore: false,\n  pointsPerUnique: 1,\n  pointsPerRepeat: 0.5,\n  pointsForContainingLower: 10,\n  pointsForContainingUpper: 10,\n  pointsForContainingNumber: 10,\n  pointsForContainingSymbol: 10\n};\n/* Counts number of occurrences of each char in a string\n * could be moved to util/ ?\n*/\n\nfunction countChars(str) {\n  var result = {};\n  Array.from(str).forEach(function (_char) {\n    var curVal = result[_char];\n\n    if (curVal) {\n      result[_char] += 1;\n    } else {\n      result[_char] = 1;\n    }\n  });\n  return result;\n}\n/* Return information about a password */\n\n\nfunction analyzePassword(password) {\n  var charMap = countChars(password);\n  var analysis = {\n    length: password.length,\n    uniqueChars: Object.keys(charMap).length,\n    uppercaseCount: 0,\n    lowercaseCount: 0,\n    numberCount: 0,\n    symbolCount: 0\n  };\n  Object.keys(charMap).forEach(function (_char2) {\n    /* istanbul ignore else */\n    if (upperCaseRegex.test(_char2)) {\n      analysis.uppercaseCount += charMap[_char2];\n    } else if (lowerCaseRegex.test(_char2)) {\n      analysis.lowercaseCount += charMap[_char2];\n    } else if (numberRegex.test(_char2)) {\n      analysis.numberCount += charMap[_char2];\n    } else if (symbolRegex.test(_char2)) {\n      analysis.symbolCount += charMap[_char2];\n    }\n  });\n  return analysis;\n}\n\nfunction scorePassword(analysis, scoringOptions) {\n  var points = 0;\n  points += analysis.uniqueChars * scoringOptions.pointsPerUnique;\n  points += (analysis.length - analysis.uniqueChars) * scoringOptions.pointsPerRepeat;\n\n  if (analysis.lowercaseCount > 0) {\n    points += scoringOptions.pointsForContainingLower;\n  }\n\n  if (analysis.uppercaseCount > 0) {\n    points += scoringOptions.pointsForContainingUpper;\n  }\n\n  if (analysis.numberCount > 0) {\n    points += scoringOptions.pointsForContainingNumber;\n  }\n\n  if (analysis.symbolCount > 0) {\n    points += scoringOptions.pointsForContainingSymbol;\n  }\n\n  return points;\n}\n\nexport default function isStrongPassword(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  assertString(str);\n  var analysis = analyzePassword(str);\n  options = merge(options || {}, defaultOptions);\n\n  if (options.returnScore) {\n    return scorePassword(analysis, options);\n  }\n\n  return analysis.length >= options.minLength && analysis.lowercaseCount >= options.minLowercase && analysis.uppercaseCount >= options.minUppercase && analysis.numberCount >= options.minNumbers && analysis.symbolCount >= options.minSymbols;\n}","import LoadingButton from \"../../../components/UI/LoadingButton/LoadingButton\";\nimport {useEffect, useState} from \"react\";\nimport isEmail from \"validator/es/lib/isEmail\";\nimport isStrongPassword from \"validator/es/lib/isStrongPassword\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport {authenticationInstance} from \"../../../axios\";\n\nconst ProfileDetails = () => {\n    const [errors, setErrors] = useState({\n        email: true,\n        password: false,\n    });\n\n    const [loading, setLoading] = useState(false);\n    const [auth, setAuth] = useAuth();\n    const submit = async e => {\n        e.preventDefault();\n        setLoading(true);\n\n        try {\n            const data = (await authenticationInstance.post('accounts:update', {\n                idToken: auth.token,\n                email: email,\n                returnSecureToken: true,\n            })).data;\n            setAuth({\n                email: data.email,\n                token: data.idToken,\n                userId: data.localId,\n            })\n        } catch (e) {\n            console.log(e.response);\n        }\n        setLoading(false);\n    };\n\n    const [email, setEmail] = useState(auth.email);\n    useEffect(() => {\n        setErrors({...errors, email: isEmail(email)});\n    }, [email]);\n\n    const [password, setPassword] = useState('');\n    useEffect(() => {\n        setErrors({...errors, \"password\": isStrongPassword(password)});\n    }, [password]);\n\n    const buttonDisabled = !errors.email || !errors.password\n\n    return (\n        <div>\n            <h2>Logowanie:</h2>\n\n            <form onSubmit={submit}>\n                <div className=\"row\">\n                    <div className=\"input-group col-12 col-md-6\">\n                        <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            id=\"email\"\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                            className={`form-control ${errors.email ? 'is-valid' : 'is-invalid'}`}\n                            autoComplete=\"new-email\"\n                        />\n                        <div className=\"invalid-feedback\">\n                            Niepoprawny email.\n                        </div>\n                        <div className=\"valid-feedback\">\n                            Wszystko gra!\n                        </div>\n                    </div>\n\n\n                    <div className=\"col-12 col-md-6 input-group\">\n                        <label htmlFor=\"password\" className=\"form-label\">Hasło</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"password\"\n                            value={password}\n                            onChange={e => setPassword(e.target.value)}\n                            className={`form-control ${errors.password ? 'is-valid' : 'is-invalid'}`}\n                            autoComplete=\"new-password\"\n                        />\n                        <div className=\"invalid-feedback\">\n                            <ul className=\"text-danger\">\n                                <li> Minimum 8 znaków</li>\n                                <li>Conajmniej jedna mała litera</li>\n                                <li>Conajmniej jedna duża litera</li>\n                                <li>Conajmniej jedna cyfra</li>\n                                <li>Conajmniej jeden znak specjalny\n                                </li>\n                            </ul>\n                        </div>\n                        <div className=\"valid-feedback\">\n                            Wszystko gra!\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-12\">\n                    <LoadingButton disabled={buttonDisabled}\n                                   loading={loading}\n                                   label=\"Zapisz się\"\n                                   loadingLabel=\"Sprawdzanie poprawności danych.\"\n                    />\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default ProfileDetails;"],"names":["upperCaseRegex","lowerCaseRegex","numberRegex","symbolRegex","defaultOptions","minLength","minLowercase","minUppercase","minNumbers","minSymbols","returnScore","pointsPerUnique","pointsPerRepeat","pointsForContainingLower","pointsForContainingUpper","pointsForContainingNumber","pointsForContainingSymbol","analyzePassword","password","charMap","str","result","Array","from","forEach","_char","countChars","analysis","length","uniqueChars","Object","keys","uppercaseCount","lowercaseCount","numberCount","symbolCount","_char2","test","scorePassword","scoringOptions","points","isStrongPassword","options","arguments","undefined","assertString","merge","useState","email","errors","setErrors","loading","setLoading","useAuth","auth","setAuth","submit","e","preventDefault","authenticationInstance","idToken","token","returnSecureToken","data","userId","localId","console","log","response","setEmail","useEffect","isEmail","setPassword","buttonDisabled","onSubmit","className","htmlFor","type","name","id","value","onChange","target","autoComplete","LoadingButton","disabled","label","loadingLabel"],"sourceRoot":""}