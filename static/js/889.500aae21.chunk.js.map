{"version":3,"file":"static/js/889.500aae21.chunk.js","mappings":"iPAAO,SAASA,EAAoBC,GAChC,IAAMC,EAAQ,GACd,IAAK,IAAMC,KAAaF,EACpBC,EAAME,MAAN,kBAAeH,EAAOE,IAAtB,IAAkCE,GAAIF,KAE1C,OAAOD,CACV,CCHM,IAAMI,EAAmB,yCAAG,kHAETC,EAAAA,EAAAA,IAAa,gBAFJ,cAErBC,EAFqB,yBAGpBR,EAAoBQ,EAAIC,OAHJ,sCAKrBC,MAAM,EAAD,IALgB,yDAAH,qD,mBC4ChC,EAzCiB,YACbC,EAAAA,EAAAA,GAAgB,0BAEhB,IAAMC,GAAOC,EAAAA,EAAAA,IAAgB,oBAE7B,GAAeC,EAAAA,EAAAA,KAARC,GAAP,eACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAU,yCAAG,+FACfD,EADe,SACEZ,IADF,mBACyBc,QAAO,SAAAC,GAAK,OAAIA,EAAMC,QAAUP,EAAKO,MAAzB,KADrC,yDAAH,qDAOhB,OAJAC,EAAAA,EAAAA,YAAU,WACNJ,GACH,GAAE,KAEI,2BACFF,GACG,mBAAOO,UAAU,sBAAjB,WACI,4BACA,2BACI,mCACA,wCAGJ,2BAEIP,EAAOQ,KAAI,SAAAJ,GAAK,OACZ,2BACI,wBAAKA,EAAMK,QACX,2BACI,mBAAQF,UAAU,kBAAlB,qBACA,mBAAQA,UAAU,sBAAlB,4BAJCH,EAAMhB,GADH,UAWxB,gEACJ,SAAC,KAAD,CAAMsB,GAAIf,EAAMY,UAAU,kBAA1B,2BAEP,C","sources":["helpers/objectToArrayWithId.js","hooks/Firebase/firebaseFetchHotels.js","pages/Profile/MyHotels/MyHotels.js"],"sourcesContent":["export function objectToArrayWithId(object) {\n    const array = [];\n    for (const objectKey in object) {\n        array.push({...object[objectKey], id: objectKey});\n    }\n    return array;\n}","import instance from \"../../axios\";\nimport {objectToArrayWithId} from \"../../helpers/objectToArrayWithId\";\n\nexport const firebaseFetchHotels = async () => {\n    try {\n        const res = await instance.get('/hotels.json');\n        return objectToArrayWithId(res.data);\n    } catch (e) {\n        throw Error(e);\n    }\n};","import {Link, useResolvedPath} from \"react-router-dom\";\nimport useWebsiteTitle from \"../../../hooks/useWebsiteTitle\";\nimport {useEffect, useState} from \"react\";\nimport {firebaseFetchHotels} from \"../../../hooks/Firebase/firebaseFetchHotels\";\nimport useAuth from \"../../../hooks/useAuth\";\n\nconst MyHotels = () => {\n    useWebsiteTitle(\"Moje hotele. | Noclegi\");\n\n    const path = useResolvedPath('dodaj-nowy-hotel');\n\n    const [auth] = useAuth();\n    const [hotels, setHotels] = useState([]);\n    const fetchHotel = async () => {\n        setHotels((await firebaseFetchHotels()).filter(hotel => hotel.userId == auth.userId));\n    }\n    useEffect(() => {\n        fetchHotel();\n    }, [])\n\n    return <div>\n        {hotels ? (\n            <table className=\"table table-striped\">\n                <thead>\n                <tr>\n                    <td>Nazwa</td>\n                    <td>Opcje</td>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    hotels.map(hotel =>\n                        <tr key={hotel.id}>\n                            <td>{hotel.name}</td>\n                            <td>\n                                <button className=\"btn btn-warning\">Edytuj</button>\n                                <button className=\"ms-2 btn btn-danger\">Usuń</button>\n                            </td>\n                        </tr>)\n                }\n                </tbody>\n            </table>\n        ) : <p>Nie ma jeszcze żadnego hotelu.</p>}\n        <Link to={path} className=\"btn btn-primary\">Dodaj hotel</Link>\n    </div>;\n};\n\nexport default MyHotels;"],"names":["objectToArrayWithId","object","array","objectKey","push","id","firebaseFetchHotels","instance","res","data","Error","useWebsiteTitle","path","useResolvedPath","useAuth","auth","useState","hotels","setHotels","fetchHotel","filter","hotel","userId","useEffect","className","map","name","to"],"sourceRoot":""}